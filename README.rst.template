BugsCpp
===========
.. begin abstract

|gitHub-actions-badge| |taxonomy-badge| |docs| |tests-badge| |coverage-badge|

`BugsCpp` is another collection of reproducible bugs for C/C++ and a supporting infrastructure with the goal of automatic program debugging research
inspired by `Defects4J`_.

.. _`Defects4J`: https://github.com/rjust/defects4j
.. |github-actions-badge| image:: https://github.com/Suresoft-GLaDOS/bugscpp/actions/workflows/build.yml/badge.svg
   :alt: Build

.. |taxonomy-badge| image:: https://github.com/Suresoft-GLaDOS/bugscpp/actions/workflows/taxonomy.yml/badge.svg
   :alt: Taxonomy

.. |docs| image:: https://github.com/Suresoft-GLaDOS/bugscpp/actions/workflows/deploy-gh-pages.yml/badge.svg
   :alt: Docs

.. |tests-badge| image:: https://suresoft-glados.github.io/bugscpp/reports/junit/tests-badge.svg?dummy=8484744
   :target: https://suresoft-glados.github.io/bugscpp/reports/junit/report.html
   :alt: Tests

.. |coverage-badge| image:: https://suresoft-glados.github.io/bugscpp/reports/coverage/coverage-badge.svg?dummy=8484744
   :target: https://suresoft-glados.github.io/bugscpp/reports/coverage/index.html
   :alt: Coverage Status

.. end abstract

Requirements
============
.. begin requirements

Hardware Requirement
--------------------
- CPU architecture: AMD64

Software Requirements
---------------------
- Docker:
  - Please make sure that the Docker daemon is running in the background.
- Python version >= 3.9

.. end requirements

Installation
============
.. begin installation

Please install the required dependencies by running the following command:

::

    make install

.. end installation

Example
=======
.. begin example

Displaying a List of Defects
------------------------------------
To view a list of defects, execute the following command:

::

    python bugscpp/bugscpp.py show

Project Checkout
----------------
Before using the other commands, you need to checkout one of the projects from the displayed list. The available projects are:
To checkout a project, use the following command:

::

    python bugscpp/bugscpp.py checkout <PROJECT> <INDEX> [-b|--buggy] [-t|--target <WORKSPACE>]

Replace ``<PROJECT>`` with the name of the project you want to checkout, and ``<INDEX>`` with the index of the defect.
The project will be stored in either ``./<WORKSPACE>/fixed-<INDEX>`` or ``./<PROJECT>/buggy-<INDEX>`` (if the option``-b`` is provided).
If ``-t`` is not given, ``<WORKSPACE>`` is automatically set to ``./<PROJECT>``.

For example, to checkout the first buggy version of the ``cpp_peglib`` project, use the following command:

::

    python bugscpp/bugscpp.py checkout cpp_peglib 1 --buggy

By default, the project will be stored in ``./cpp_peglib/buggy-1``.

Building and Testing a Project
------------------------------
To build and test a project, use the following commands:

::

    python bugscpp/bugscpp.py build <PATH>
    python bugscpp/bugscpp.py test <PATH>

Replace ``<PATH>`` with the path to the checkout directory of the project. For example, to build and test the  buggy version of ``cpp_peglib-1``, you can use the following commands:

::

    python bugscpp/bugscpp.py build ./cpp_peglib/buggy-1
    python bugscpp/bugscpp.py test ./cpp_peglib/buggy-1

Running Specific Test Cases
---------------------------
You can run specific test cases separately using the following command:

::

    python bugscpp/bugscpp.py test <PATH> --case <EXPR>

Replace ``<PATH>`` with the path to the checkout directory of the project, and ``<EXPR>`` with the test case IDs. For example, to run test cases 1 to 4 and 7 of the ``cpp_peglib`` project, use the following command:

::

    python bugscpp/bugscpp.py test ./cpp_peglib/buggy-1 --case 1-4,7

Generating Code Coverage Data
-----------------------------
To generate code coverage data, add the ``--coverage`` flag to the build and test commands:

::

    python bugscpp/bugscpp.py build <PATH> --coverage
    python bugscpp/bugscpp.py test <PATH> --coverage

For example, to generate code coverage data for the ``cpp_peglib`` project, you can use the following commands:

::

    python bugscpp/bugscpp.py build ./cpp_peglib/buggy-1 --coverage
    python bugscpp/bugscpp.py test ./cpp_peglib/buggy-1 --coverage

Searching Defects by Tags
-------------------------
To search for defects using specific tags, use the following command:

::

    python bugscpp/bugscpp.py search <TAG1> <TAG2> ...

Replace ``<TAG1>``, ``<TAG2>``, and so on, with the specific `tags`_ you want to search for.

.. _`tags`: https://github.com/Suresoft-GLaDOS/bugscpp/wiki/tags_bugscpp

For example, to search for defects related to "cve", "single-line", and "memory-error", use the following command:

::

    python bugscpp/bugscpp.py search cve single-line memory-error

The command will display the projects that match the specified tags.

.. end example

Table of Defects
================
@TABLE_OF_DEFECTS@

Documentation
=============

For full documentation, please see `github.io`_.

.. _`github.io`: https://suresoft-glados.github.io/bugscpp/

Bugs/Requests/Contributing
==========================
.. begin contribute

If you want to report a bug, request features or submit a pull request,
please use the gitHub issue tracker to submit them.

.. end contribute

Change Log
==========
.. begin changelog

.. end changelog

License
=======
.. begin license

Copyright `Suresoft Technologies Inc`_, 2021.

Distributed under the terms of the `MIT`_ license, BugsCpp is free and open source software.

.. _`MIT`: https://github.com/Suresoft-GLaDOS/bugscpp/blob/main/LICENSE
.. _`Suresoft Technologies Inc`: http://www.suresofttech.com/en/main/index.php

.. end license
