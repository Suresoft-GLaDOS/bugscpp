From 3c40535f7888266fe994967c4e75fbfa4d131294 Mon Sep 17 00:00:00 2001
From: yckim <yckim@suresofttech.com>
Date: Wed, 15 Sep 2021 09:12:30 +0900
Subject: [PATCH] buggy

---
 crypto/pem/pem_lib.c | 18 +++++++-----------
 1 file changed, 7 insertions(+), 11 deletions(-)

diff --git a/crypto/pem/pem_lib.c b/crypto/pem/pem_lib.c
index f5ed70d6b4..ee13defead 100644
--- a/crypto/pem/pem_lib.c
+++ b/crypto/pem/pem_lib.c
@@ -806,7 +806,7 @@ static int get_header_and_data(BIO *bp, BIO **header, BIO **data, char *name,
 {
     BIO *tmp = *header;
     char *linebuf, *p;
-    int len, line, ret = 0, end = 0, prev_partial_line_read = 0, partial_line_read = 0;
+    int len, line, ret = 0, end = 0;
     /* 0 if not seen (yet), 1 if reading header, 2 if finished header */
     enum header_status got_header = MAYBE_HEADER;
     unsigned int flags_mask;
@@ -833,8 +833,6 @@ static int get_header_and_data(BIO *bp, BIO **header, BIO **data, char *name,
          * has been read. Keep the previous value to ignore newlines that
          * appear due to reading a line up until the char before the newline.
          */
-        prev_partial_line_read = partial_line_read;
-        partial_line_read = len == LINESIZE-1 && linebuf[LINESIZE-2] != '\n';
 
         if (got_header == MAYBE_HEADER) {
             if (memchr(linebuf, ':', len) != NULL)
@@ -850,15 +848,13 @@ static int get_header_and_data(BIO *bp, BIO **header, BIO **data, char *name,
              * If previous line has been read only partially this newline is a
              * regular newline at the end of a line and not an empty line.
              */
-            if (!prev_partial_line_read) {
-                if (got_header == POST_HEADER) {
-                    /* Another blank line is an error. */
-                    PEMerr(PEM_F_GET_HEADER_AND_DATA, PEM_R_BAD_END_LINE);
-                    goto err;
-                }
-                got_header = POST_HEADER;
-                tmp = *data;
+            if (got_header == POST_HEADER) {
+                /* Another blank line is an error. */
+                PEMerr(PEM_F_GET_HEADER_AND_DATA, PEM_R_BAD_END_LINE);
+                goto err;
             }
+            got_header = POST_HEADER;
+            tmp = *data;
             continue;
         }
 
-- 
2.23.0.windows.1

