From ab7a51f6edd151424f65ca0c4cbf5179d19949e0 Mon Sep 17 00:00:00 2001
From: yckim <yckim@suresofttech.com>
Date: Wed, 15 Sep 2021 09:44:38 +0900
Subject: [PATCH] buggy

---
 crypto/params_from_text.c | 19 ++++++-------------
 1 file changed, 6 insertions(+), 13 deletions(-)

diff --git a/crypto/params_from_text.c b/crypto/params_from_text.c
index b019744f9b..41e167b0e4 100644
--- a/crypto/params_from_text.c
+++ b/crypto/params_from_text.c
@@ -28,7 +28,6 @@ static int prepare_from_text(const OSSL_PARAM *paramdefs, const char *key,
                              size_t *buf_n, BIGNUM **tmpbn, int *found)
 {
     const OSSL_PARAM *p;
-    size_t buf_bits;
 
     /*
      * ishex is used to translate legacy style string controls in hex format
@@ -51,7 +50,7 @@ static int prepare_from_text(const OSSL_PARAM *paramdefs, const char *key,
         if (*ishex)
             BN_hex2bn(tmpbn, value);
         else
-            BN_asc2bn(tmpbn, value);
+            BN_dec2bn(tmpbn, value);
 
         if (*tmpbn == NULL)
             return 0;
@@ -67,21 +66,18 @@ static int prepare_from_text(const OSSL_PARAM *paramdefs, const char *key,
          * actually have to add 1: -3 - 1 = -4, |-3| = 3 + 1 = 4.
          */
         if (p->data_type == OSSL_PARAM_INTEGER && BN_is_negative(*tmpbn)
-            && !BN_add_word(*tmpbn, 1)) {
+            && !BN_sub_word(*tmpbn, 1)) {
             return 0;
         }
 
-        buf_bits = (size_t)BN_num_bits(*tmpbn);
-        *buf_n = (buf_bits + 7) / 8;
+        *buf_n = BN_num_bytes(*tmpbn);
 
         /*
          * TODO(v3.0) is this the right way to do this?  This code expects
          * a zero data size to simply mean "arbitrary size".
          */
         if (p->data_size > 0) {
-            if (buf_bits > p->data_size * 8
-                || (p->data_type == OSSL_PARAM_INTEGER
-                    && buf_bits == p->data_size * 8)) {
+            if (*buf_n >= p->data_size) {
                 ERR_raise(ERR_LIB_CRYPTO, CRYPTO_R_TOO_SMALL_BUFFER);
                 /* Since this is a different error, we don't break */
                 return 0;
@@ -190,11 +186,11 @@ int OSSL_PARAM_allocate_from_text(OSSL_PARAM *to,
 
     if (!prepare_from_text(paramdefs, key, value, value_n,
                            &paramdef, &ishex, &buf_n, &tmpbn, found))
-        goto err;
+        return 0;
 
     if ((buf = OPENSSL_zalloc(buf_n > 0 ? buf_n : 1)) == NULL) {
         ERR_raise(ERR_LIB_CRYPTO, ERR_R_MALLOC_FAILURE);
-        goto err;
+        return 0;
     }
 
     ok = construct_from_text(to, paramdef, value, value_n, ishex,
@@ -203,7 +199,4 @@ int OSSL_PARAM_allocate_from_text(OSSL_PARAM *to,
     if (!ok)
         OPENSSL_free(buf);
     return ok;
- err:
-    BN_free(tmpbn);
-    return 0;
 }
-- 
2.23.0.windows.1

