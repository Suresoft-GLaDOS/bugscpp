From aff5b0790a257500b5fe81f674a8a7f4f669e4c6 Mon Sep 17 00:00:00 2001
From: crAy <crAyCoding@gmail.com>
Date: Thu, 11 Aug 2022 17:34:05 +0900
Subject: [PATCH] common

---
 test/test2.cc | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/test/test2.cc b/test/test2.cc
index 2b249e3..fef61e0 100644
--- a/test/test2.cc
+++ b/test/test2.cc
@@ -3,6 +3,23 @@

 using namespace peg;

+#ifdef DPP_ENABLE_GCOV
+#include <signal.h>
+void dpp_sighandler(int signum);
+static struct sigaction dpp_gcov_sigaction;
+extern "C" void __gcov_flush();
+void dpp_gcov_flush(int signum) {
+   __gcov_flush();
+   exit(1);
+}
+void dpp_gcov_handler(void(*dpp_gcov_flush)(int sig)) {
+    dpp_gcov_sigaction.sa_handler = dpp_gcov_flush;
+    for (int sig = 1; sig <= SIGRTMAX; ++sig) {
+        sigaction(sig, &dpp_gcov_sigaction, NULL);
+    }
+}
+#endif
+
 TEST_CASE("Infinite loop 1", "[infinite loop]")
 {
     parser pg(R"(
@@ -915,6 +932,11 @@ TEST_CASE("Macro passes an arg to another macro", "[macro]") {
 }

 TEST_CASE("Nested macro call", "[macro]") {
+#ifdef DPP_ENABLE_GCOV
+    {
+        dpp_gcov_handler(dpp_gcov_flush);
+    }
+#endif
   parser parser(R"(
         A    <- B(T)
         B(X) <- C(X)
@@ -927,6 +949,11 @@ TEST_CASE("Nested macro call", "[macro]") {

 TEST_CASE("Nested macro call2", "[macro]")
 {
+#ifdef DPP_ENABLE_GCOV
+    {
+        dpp_gcov_handler(dpp_gcov_flush);
+    }
+#endif
     parser parser(R"(
         START           <- A('TestVal1', 'TestVal2')+
         A(Aarg1, Aarg2) <- B(Aarg1) '#End'
--
2.25.1

