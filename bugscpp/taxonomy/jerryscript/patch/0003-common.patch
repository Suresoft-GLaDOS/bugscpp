From feeb80bcb62207d83dc82e73353f307e2c798639 Mon Sep 17 00:00:00 2001
From: kseo <kseo@suresofttech.com>
Date: Fri, 15 Jul 2022 16:04:24 +0900
Subject: [PATCH] common

---
 CMakeLists.txt                                |  4 +--
 .../ecma/operations/ecma-regexp-object.c      |  5 +---
 jerry-main/main-jerry.c                       | 25 +++++++++++++++++++
 3 files changed, 28 insertions(+), 6 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 044a2de8..81e8b9da 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -210,7 +210,7 @@ elseif((NOT CYGWIN AND NOT MINGW AND NOT MSYS) AND (USING_GCC OR USING_CLANG))
 endif()
 
 if(USING_GCC OR USING_CLANG)
-  jerry_add_compile_flags(-std=c99 -pedantic)
+  jerry_add_compile_flags(-std=gnu99 -pedantic)
   if(JERRY_MATH)
     jerry_add_compile_flags(-fno-builtin)
   endif()
@@ -234,7 +234,7 @@ if(USING_CLANG)
 endif()
 
 if(USING_TI)
-  jerry_add_compile_flags(--c99)
+  jerry_add_compile_flags(--gnu99)
 endif()
 
 if(USING_MSVC)
diff --git a/jerry-core/ecma/operations/ecma-regexp-object.c b/jerry-core/ecma/operations/ecma-regexp-object.c
index 9d2ca38d..3fc64c9b 100644
--- a/jerry-core/ecma/operations/ecma-regexp-object.c
+++ b/jerry-core/ecma/operations/ecma-regexp-object.c
@@ -3494,10 +3494,7 @@ ecma_regexp_match_helper (ecma_value_t this_arg, /**< this argument */
       index = ecma_op_advance_string_index (str_p, index, full_unicode);
 
       last_index = ecma_make_length_value (index);
-      ecma_value_t next_set_status = ecma_op_object_put (obj_p,
-                                                         ecma_get_magic_string (LIT_MAGIC_STRING_LASTINDEX_UL),
-                                                         last_index,
-                                                         true);
+      ecma_value_t next_set_status = ecma_op_object_put (obj_p, ecma_get_magic_string (LIT_MAGIC_STRING_LASTINDEX_UL), last_index, true);
 #else /* !JERRY_ESNEXT */
       ecma_number_t index = ecma_get_number_from_value (last_index);
       ecma_free_value (last_index);
diff --git a/jerry-main/main-jerry.c b/jerry-main/main-jerry.c
index dbf76349..b4bee81f 100644
--- a/jerry-main/main-jerry.c
+++ b/jerry-main/main-jerry.c
@@ -45,10 +45,35 @@ context_alloc (size_t size,
 } /* context_alloc */
 #endif /* defined (JERRY_EXTERNAL_CONTEXT) && (JERRY_EXTERNAL_CONTEXT == 1) */
 
+#ifdef DPP_ENABLE_GCOV
+#include <signal.h>
+#include <gcov.h>
+void dpp_sighandler(int signum);
+static struct sigaction dpp_gcov_sigaction;
+static struct sigaction dpp_orig_sigaction;
+void dpp_sighandler(int signum) {
+  __gcov_flush();
+  sigaction(signum, &dpp_orig_sigaction, NULL);
+  raise(signum);
+}
+void __asan_on_error(void);
+void __asan_on_error(void){
+  __gcov_flush();
+}
+#endif
+
 int
 main (int argc,
       char **argv)
 {
+#ifdef DPP_ENABLE_GCOV
+  {
+   dpp_gcov_sigaction.sa_handler = dpp_sighandler;
+   sigemptyset(&dpp_gcov_sigaction.sa_mask);
+   dpp_gcov_sigaction.sa_flags = 0;
+   sigaction(SIGABRT, &dpp_gcov_sigaction, &dpp_orig_sigaction);
+  }
+#endif
   union
   {
     double d;
-- 
2.25.1

