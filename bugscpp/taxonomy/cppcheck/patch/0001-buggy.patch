From a7e4654c3fb38a0c54be83e6af7ce70a37b8391b Mon Sep 17 00:00:00 2001
From: Seyeon <best6653@gmail.com>
Date: Thu, 16 Sep 2021 14:50:46 +0900
Subject: [PATCH] buggy

---
 lib/checkleakautovar.cpp | 20 ++++++--------------
 1 file changed, 6 insertions(+), 14 deletions(-)

diff --git a/lib/checkleakautovar.cpp b/lib/checkleakautovar.cpp
index 264502acf..c12011c92 100644
--- a/lib/checkleakautovar.cpp
+++ b/lib/checkleakautovar.cpp
@@ -930,21 +930,13 @@ void CheckLeakAutoVar::ret(const Token *tok, const VarInfo &varInfo)
         if (var) {
             bool used = false;
             for (const Token *tok2 = tok; tok2; tok2 = tok2->next()) {
-                if (tok2->str() == ";" || Token::simpleMatch(tok2, "return ;"))
+                if (tok2->str() == ";")
                     break;
-                if (!Token::Match(tok2, "return|(|{|,"))
-                    continue;
-
-                tok2 = tok2->next();
-                while (tok2 && tok2->isCast() && (tok2->valueType()->pointer || (tok2->valueType()->typeSize(*mSettings) >= mSettings->sizeof_pointer)))
-                    tok2 = tok2->astOperand2() ? tok2->astOperand2() : tok2->astOperand1();
-                if (Token::Match(tok2, "%varid%", varid))
-                    tok2 = tok2->next();
-                else if (Token::Match(tok2, "& %varid% . %name%", varid))
-                    tok2 = tok2->tokAt(4);
-                else
-                    continue;
-                if (Token::Match(tok2, "[});,]")) {
+                if (Token::Match(tok2, "return|(|{|, %varid% [});,]", varid)) {
+                    used = true;
+                    break;
+                }
+                if (Token::Match(tok2, "return|(|{|, & %varid% . %name% [});,]", varid)) {
                     used = true;
                     break;
                 }
-- 
2.25.1

