From 0d7988103bd3fe74e5f0cac58ccc89a50ff427f8 Mon Sep 17 00:00:00 2001
From: Seyeon <best6653@gmail.com>
Date: Fri, 17 Sep 2021 09:00:33 +0900
Subject: [PATCH] buggy

---
 lib/valueflow.cpp | 26 ++++++++------------------
 1 file changed, 8 insertions(+), 18 deletions(-)

diff --git a/lib/valueflow.cpp b/lib/valueflow.cpp
index 29f38d1ee..cf784ddfc 100644
--- a/lib/valueflow.cpp
+++ b/lib/valueflow.cpp
@@ -4321,19 +4321,9 @@ static void valueFlowInferCondition(TokenList* tokenlist,
         } else if (tok->isComparisonOp()) {
             MathLib::bigint val = 0;
             const Token* varTok = nullptr;
-            std::string op = tok->str();
             if (tok->astOperand1()->hasKnownIntValue()) {
                 val = tok->astOperand1()->values().front().intvalue;
                 varTok = tok->astOperand2();
-                // Flip the operator
-                if (op == ">")
-                    op = "<";
-                else if (op == "<")
-                    op = ">";
-                else if (op == ">=")
-                    op = "<=";
-                else if (op == "<=")
-                    op = ">=";
             } else if (tok->astOperand2()->hasKnownIntValue()) {
                 val = tok->astOperand2()->values().front().intvalue;
                 varTok = tok->astOperand1();
@@ -4346,22 +4336,22 @@ static void valueFlowInferCondition(TokenList* tokenlist,
                 continue;
             const ValueFlow::Value* result = nullptr;
             bool known = false;
-            if (op == "==" || op == "!=") {
+            if (Token::Match(tok, "==|!=")) {
                 result = proveNotEqual(varTok->values(), val);
-                known = op == "!=";
-            } else if (op == "<" || op == ">=") {
+                known = tok->str() == "!=";
+            } else if (Token::Match(tok, "<|>=")) {
                 result = proveLessThan(varTok->values(), val);
-                known = op == "<";
+                known = tok->str() == "<";
                 if (!result && !isSaturated(val)) {
                     result = proveGreaterThan(varTok->values(), val - 1);
-                    known = op == ">=";
+                    known = tok->str() == ">=";
                 }
-            } else if (op == ">" || op == "<=") {
+            } else if (Token::Match(tok, ">|<=")) {
                 result = proveGreaterThan(varTok->values(), val);
-                known = op == ">";
+                known = tok->str() == ">";
                 if (!result && !isSaturated(val)) {
                     result = proveLessThan(varTok->values(), val + 1);
-                    known = op == "<=";
+                    known = tok->str() == "<=";
                 }
             }
             if (!result)
-- 
2.25.1

