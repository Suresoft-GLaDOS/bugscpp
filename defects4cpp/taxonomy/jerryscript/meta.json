{
  "info": {
    "url": "https://github.com/jerryscript-project/jerryscript.git",
    "short-desc": "JerryScript is a lightweight JavaScript engine for resource-constrained devices such as microcontrollers.",
    "vcs": "git"
  },
  "common": {
    "build": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c \"rm -rf build\"",
            "bash -c \"source .dpp/build.sh\"",
            "bash -c \"export LC_ALL=C.UTF-8\""
          ]
        }
      ]
    },
    "build-coverage": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c \"rm -rf build\"",
            "bash -c \"source .dpp/build.sh \\\"-g -O0 --coverage -DDPP_ENABLE_GCOV\\\"\"",
            "bash -c \"export LC_ALL=C.UTF-8\""
          ]
        }
      ]
    },
    "test-type": "ctest",
    "test": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c \"index=$(cat DPP_TEST_INDEX); python .dpp/run-unittests.py $(sed -n \"${index}p\" .dpp/test_list)\""
          ]
        }
      ]
    },
    "test-coverage": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c \"index=$(cat DPP_TEST_INDEX); python .dpp/run-unittests.py $(sed -n \"${index}p\" .dpp/test_list)\""
          ]
        }
      ]
    },
    "gcov": {
      "exclude": [],
      "commands": [
        {
          "type": "docker",
          "lines": [
            "mkdir gcov",
            "bash -c 'gcov @DPP_ADDITIONAL_GCOV_OPTIONS@ --preserve-paths $(find . -name *.gcno -exec dirname {} \\; | uniq | xargs printf -- \"%s/*.o \")'",
            "bash -c 'find . -type f -name \"*.gcov\" -execdir mv {} /home/workspace/gcov \\;'",
            "bash -c 'find . -type f -name \"*.gcda\" -delete'"
          ]
        }
      ]
    }
  },
  "defects": [
    {
      "hash": "69f8e78c2f8d562bd6d8002b5488f1662ac30d24",
      "num_cases": 524,
      "case": [524],
      "description": "TestLeakAutoVar",
      "extra_tests": [
        [
          {
            "type": "docker",
            "lines": [
              "bash -c \"build/bin/jerry .dpp/test.js\""
            ],
            "is_pass": false
          }
        ]
      ]
    }
  ]
}
