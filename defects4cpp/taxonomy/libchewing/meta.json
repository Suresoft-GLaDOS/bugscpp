{
  "info": {
    "url": "https://github.com/chewing/libchewing",
    "short-desc": "The Chewing (酷音) is an intelligent phonetic (Zhuyin/Bopomofo) input method, one of the most popular choices for Traditional Chinese users. Chewing was inspired by other proprietary intelligent Zhuyin input methods under Microsoft Windows, namely, Wang-Xin by Eten, Microsoft New Zhuyin, and Nature Zhuyin.",
    "vcs": "git"
  },
  "common": {
    "build": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "cmake @DPP_CMAKE_GEN_COMPILATION_DB@ -DCMAKE_BUILD_TYPE=Debug -S . -B build -G Ninja",
            "cmake --build build --target clean",
            "@DPP_CMAKE_COMPILATION_DB_TOOL@ cmake --build build --target all --parallel @DPP_PARALLEL_BUILD@"
          ]
        }
      ]
    },
    "build-coverage": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "cmake @DPP_CMAKE_GEN_COMPILATION_DB@ -DCMAKE_C_FLAGS=\"--coverage -g -O0\" -DCMAKE_C_OUTPUT_EXTENSION_REPLACE=ON -DCMAKE_BUILD_TYPE=Debug -S . -B build -G Ninja",
            "cmake --build build --target clean",
            "@DPP_CMAKE_COMPILATION_DB_TOOL@ cmake --build build --target all --parallel @DPP_PARALLEL_BUILD@"
          ]
        }
      ]
    },
    "test-type": "ctest",
    "test": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c \"[ -f CTEST_TEST_CASE.output ] || ctest --show-only --test-dir build | sed -rn 's/[[:blank:]]*Test[[:blank:]]*#[[:digit:]]*:[[:blank:]]*(.*)/\\1/p' > CTEST_TEST_CASE.output\"",
            "bash -c \"index=$(cat DPP_TEST_INDEX); ctest --output-on-failure --tests-regex $(sed -n \\\"${index}p\\\" < CTEST_TEST_CASE.output)$ --test-dir build\""
          ]
        }
      ]
    },
    "test-coverage": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c \"[ -f CTEST_TEST_CASE.output ] || ctest --show-only --test-dir build | sed -rn 's/[[:blank:]]*Test[[:blank:]]*#[[:digit:]]*:[[:blank:]]*(.*)/\\1/p' > CTEST_TEST_CASE.output\"",
            "bash -c \"index=$(cat DPP_TEST_INDEX); ctest --output-on-failure --tests-regex $(sed -n \\\"${index}p\\\" < CTEST_TEST_CASE.output)$ --test-dir build\""
          ]
        }
      ]
    },
    "gcov": {
      "exclude": [],
      "commands": [
        {
          "type": "docker",
          "lines": [
            "mkdir gcov",
            "bash -c 'find /home/workspace/build/CMakeFiles/chewing.dir -type f -name \"*.o\" -exec gcov @DPP_ADDITIONAL_GCOV_OPTIONS@ --preserve-paths  {} \\;'",
            "bash -c 'find /home/workspace/build/CMakeFiles/common.dir -type f -name \"*.o\" -exec gcov @DPP_ADDITIONAL_GCOV_OPTIONS@ --preserve-paths  {} \\;'",
            "bash -c 'find /home/workspace/build/CMakeFiles/dump_database.dir -type f -name \"*.o\" -exec gcov @DPP_ADDITIONAL_GCOV_OPTIONS@ --preserve-paths  {} \\;'",
            "bash -c 'find /home/workspace/build/CMakeFiles/userphrase.dir -type f -name \"*.o\" -exec gcov @DPP_ADDITIONAL_GCOV_OPTIONS@ --preserve-paths {} \\;'",
            "bash -c 'find build -type f -name \"*.gcda\" -delete'",
            "bash -c 'mv *.gcov /home/workspace/gcov'"
          ]
        }
      ]
    }
  },
  "defects": [
    {
      "hash": "05bb0becd749510493273884a8262fe038fe5624",
      "num_cases": 18,
      "case": [12],
      "description": ""
    },
    {
      "hash": "6bd0906e262160a594388794606f563bb1e94e8f",
      "num_cases": 18,
      "case": [12],
      "description": ""
    },
    {
      "hash": "7bd9a439cbca5f176c178a460814a804de3fd55e",
      "num_cases": 17,
      "case": [12],
      "description": ""
    },
    {
      "hash": "9dfe795a997caa38f85ab41a7f6c2ce68f9e5a8d",
      "num_cases": 17,
      "case": [1],
      "description": ""
    },
    {
      "hash": "13bc5e379857238483662c9480e41b6056a183b3",
      "num_cases": 17,
      "case": [1],
      "description": ""
    },
    {
      "hash": "634b4f5b03a803be176a336377638b31ebcf876e",
      "num_cases": 15,
      "case": [1],
      "description": ""
    },
    {
      "hash": "e02be85210c22650c298ceddb8b3d629846d4a88",
      "num_cases": 18,
      "case": [1],
      "description": ""
    },
    {
      "hash": "eb65402015d71808c474a3c76d6f5f2aa4f7a379",
      "num_cases": 15,
      "case": [1],
      "description": ""
    }
  ]
}
