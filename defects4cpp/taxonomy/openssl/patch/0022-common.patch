From 9be67a81d898d1de712c4ac668a83153e65239f8 Mon Sep 17 00:00:00 2001
From: crAy <crAyCoding@gmail.com>
Date: Thu, 18 Aug 2022 17:22:05 +0900
Subject: [PATCH] common

---
 test/ssl-tests/12-ct.cnf    | 197 ++++++++++++++----------------------
 test/ssl-tests/12-ct.cnf.in | 152 +++++++++++-----------------
 2 files changed, 137 insertions(+), 212 deletions(-)

diff --git a/test/ssl-tests/12-ct.cnf b/test/ssl-tests/12-ct.cnf
index 2e6e9dea67..99fa8109c3 100644
--- a/test/ssl-tests/12-ct.cnf
+++ b/test/ssl-tests/12-ct.cnf
@@ -2,190 +2,149 @@
 
 num_tests = 6
 
-test-0 = 0-ct-permissive-without-scts
-test-1 = 1-ct-permissive-with-scts
-test-2 = 2-ct-strict-without-scts
-test-3 = 3-ct-strict-with-scts
-test-4 = 4-ct-permissive-resumption
-test-5 = 5-ct-strict-resumption
+test-0 = 0-SECLEVEL 3 with default key
+test-1 = 1-SECLEVEL 4 with ED448 key
+test-2 = 2-SECLEVEL 5 server with ED448 key
+test-3 = 3-SECLEVEL 5 client with ED448 key
+test-4 = 4-SECLEVEL 3 with P-384 key, X25519 ECDHE
+test-5 = 5-SECLEVEL 3 with ED448 key, TLSv1.2
 # ===========================================================
 
-[0-ct-permissive-without-scts]
-ssl_conf = 0-ct-permissive-without-scts-ssl
+[0-SECLEVEL 3 with default key]
+ssl_conf = 0-SECLEVEL 3 with default key-ssl
 
-[0-ct-permissive-without-scts-ssl]
-server = 0-ct-permissive-without-scts-server
-client = 0-ct-permissive-without-scts-client
+[0-SECLEVEL 3 with default key-ssl]
+server = 0-SECLEVEL 3 with default key-server
+client = 0-SECLEVEL 3 with default key-client
 
-[0-ct-permissive-without-scts-server]
+[0-SECLEVEL 3 with default key-server]
 Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
-CipherString = DEFAULT
+CipherString = DEFAULT:@SECLEVEL=3
 PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem
 
-[0-ct-permissive-without-scts-client]
+[0-SECLEVEL 3 with default key-client]
 CipherString = DEFAULT
 VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
 VerifyMode = Peer
 
 [test-0]
-ExpectedResult = Success
-client = 0-ct-permissive-without-scts-client-extra
-
-[0-ct-permissive-without-scts-client-extra]
-CTValidation = Permissive
+ExpectedResult = ServerFail
 
 
 # ===========================================================
 
-[1-ct-permissive-with-scts]
-ssl_conf = 1-ct-permissive-with-scts-ssl
+[1-SECLEVEL 4 with ED448 key]
+ssl_conf = 1-SECLEVEL 4 with ED448 key-ssl
 
-[1-ct-permissive-with-scts-ssl]
-server = 1-ct-permissive-with-scts-server
-client = 1-ct-permissive-with-scts-client
+[1-SECLEVEL 4 with ED448 key-ssl]
+server = 1-SECLEVEL 4 with ED448 key-server
+client = 1-SECLEVEL 4 with ED448 key-client
 
-[1-ct-permissive-with-scts-server]
-Certificate = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1.pem
-CipherString = DEFAULT
-PrivateKey = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1-key.pem
+[1-SECLEVEL 4 with ED448 key-server]
+Certificate = ${ENV::TEST_CERTS_DIR}/server-ed448-cert.pem
+CipherString = DEFAULT:@SECLEVEL=4
+PrivateKey = ${ENV::TEST_CERTS_DIR}/server-ed448-key.pem
 
-[1-ct-permissive-with-scts-client]
-CipherString = DEFAULT
-VerifyCAFile = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1_issuer.pem
+[1-SECLEVEL 4 with ED448 key-client]
+CipherString = DEFAULT:@SECLEVEL=4
+VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-ed448-cert.pem
 VerifyMode = Peer
 
 [test-1]
 ExpectedResult = Success
-client = 1-ct-permissive-with-scts-client-extra
-
-[1-ct-permissive-with-scts-client-extra]
-CTValidation = Permissive
 
 
 # ===========================================================
 
-[2-ct-strict-without-scts]
-ssl_conf = 2-ct-strict-without-scts-ssl
+[2-SECLEVEL 5 server with ED448 key]
+ssl_conf = 2-SECLEVEL 5 server with ED448 key-ssl
 
-[2-ct-strict-without-scts-ssl]
-server = 2-ct-strict-without-scts-server
-client = 2-ct-strict-without-scts-client
+[2-SECLEVEL 5 server with ED448 key-ssl]
+server = 2-SECLEVEL 5 server with ED448 key-server
+client = 2-SECLEVEL 5 server with ED448 key-client
 
-[2-ct-strict-without-scts-server]
-Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem
-CipherString = DEFAULT
-PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem
+[2-SECLEVEL 5 server with ED448 key-server]
+Certificate = ${ENV::TEST_CERTS_DIR}/server-ed448-cert.pem
+CipherString = DEFAULT:@SECLEVEL=5
+PrivateKey = ${ENV::TEST_CERTS_DIR}/server-ed448-key.pem
 
-[2-ct-strict-without-scts-client]
-CipherString = DEFAULT
-VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
+[2-SECLEVEL 5 server with ED448 key-client]
+CipherString = DEFAULT:@SECLEVEL=4
+VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-ed448-cert.pem
 VerifyMode = Peer
 
 [test-2]
-ExpectedClientAlert = HandshakeFailure
-ExpectedResult = ClientFail
-client = 2-ct-strict-without-scts-client-extra
-
-[2-ct-strict-without-scts-client-extra]
-CTValidation = Strict
+ExpectedResult = ServerFail
 
 
 # ===========================================================
 
-[3-ct-strict-with-scts]
-ssl_conf = 3-ct-strict-with-scts-ssl
+[3-SECLEVEL 5 client with ED448 key]
+ssl_conf = 3-SECLEVEL 5 client with ED448 key-ssl
 
-[3-ct-strict-with-scts-ssl]
-server = 3-ct-strict-with-scts-server
-client = 3-ct-strict-with-scts-client
+[3-SECLEVEL 5 client with ED448 key-ssl]
+server = 3-SECLEVEL 5 client with ED448 key-server
+client = 3-SECLEVEL 5 client with ED448 key-client
 
-[3-ct-strict-with-scts-server]
-Certificate = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1.pem
-CipherString = DEFAULT
-PrivateKey = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1-key.pem
+[3-SECLEVEL 5 client with ED448 key-server]
+Certificate = ${ENV::TEST_CERTS_DIR}/server-ed448-cert.pem
+CipherString = DEFAULT:@SECLEVEL=4
+PrivateKey = ${ENV::TEST_CERTS_DIR}/server-ed448-key.pem
 
-[3-ct-strict-with-scts-client]
-CipherString = DEFAULT
-VerifyCAFile = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1_issuer.pem
+[3-SECLEVEL 5 client with ED448 key-client]
+CipherString = DEFAULT:@SECLEVEL=5
+VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-ed448-cert.pem
 VerifyMode = Peer
 
 [test-3]
-ExpectedResult = Success
-client = 3-ct-strict-with-scts-client-extra
-
-[3-ct-strict-with-scts-client-extra]
-CTValidation = Strict
+ExpectedResult = ServerFail
 
 
 # ===========================================================
 
-[4-ct-permissive-resumption]
-ssl_conf = 4-ct-permissive-resumption-ssl
+[4-SECLEVEL 3 with P-384 key, X25519 ECDHE]
+ssl_conf = 4-SECLEVEL 3 with P-384 key, X25519 ECDHE-ssl
 
-[4-ct-permissive-resumption-ssl]
-server = 4-ct-permissive-resumption-server
-client = 4-ct-permissive-resumption-client
-resume-server = 4-ct-permissive-resumption-server
-resume-client = 4-ct-permissive-resumption-client
+[4-SECLEVEL 3 with P-384 key, X25519 ECDHE-ssl]
+server = 4-SECLEVEL 3 with P-384 key, X25519 ECDHE-server
+client = 4-SECLEVEL 3 with P-384 key, X25519 ECDHE-client
 
-[4-ct-permissive-resumption-server]
-Certificate = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1.pem
-CipherString = DEFAULT
-PrivateKey = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1-key.pem
+[4-SECLEVEL 3 with P-384 key, X25519 ECDHE-server]
+Certificate = ${ENV::TEST_CERTS_DIR}/p384-server-cert.pem
+CipherString = DEFAULT:@SECLEVEL=3
+Groups = X25519
+PrivateKey = ${ENV::TEST_CERTS_DIR}/p384-server-key.pem
 
-[4-ct-permissive-resumption-client]
-CipherString = DEFAULT
-VerifyCAFile = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1_issuer.pem
+[4-SECLEVEL 3 with P-384 key, X25519 ECDHE-client]
+CipherString = ECDHE:@SECLEVEL=3
+VerifyCAFile = ${ENV::TEST_CERTS_DIR}/p384-root.pem
 VerifyMode = Peer
 
 [test-4]
 ExpectedResult = Success
-HandshakeMode = Resume
-ResumptionExpected = Yes
-client = 4-ct-permissive-resumption-client-extra
-resume-client = 4-ct-permissive-resumption-client-extra
-
-[4-ct-permissive-resumption-client-extra]
-CTValidation = Permissive
 
 
 # ===========================================================
 
-[5-ct-strict-resumption]
-ssl_conf = 5-ct-strict-resumption-ssl
+[5-SECLEVEL 3 with ED448 key, TLSv1.2]
+ssl_conf = 5-SECLEVEL 3 with ED448 key, TLSv1.2-ssl
 
-[5-ct-strict-resumption-ssl]
-server = 5-ct-strict-resumption-server
-client = 5-ct-strict-resumption-client
-resume-server = 5-ct-strict-resumption-server
-resume-client = 5-ct-strict-resumption-resume-client
+[5-SECLEVEL 3 with ED448 key, TLSv1.2-ssl]
+server = 5-SECLEVEL 3 with ED448 key, TLSv1.2-server
+client = 5-SECLEVEL 3 with ED448 key, TLSv1.2-client
 
-[5-ct-strict-resumption-server]
-Certificate = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1.pem
-CipherString = DEFAULT
-PrivateKey = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1-key.pem
+[5-SECLEVEL 3 with ED448 key, TLSv1.2-server]
+Certificate = ${ENV::TEST_CERTS_DIR}/server-ed448-cert.pem
+CipherString = DEFAULT:@SECLEVEL=3
+MaxProtocol = TLSv1.2
+PrivateKey = ${ENV::TEST_CERTS_DIR}/server-ed448-key.pem
 
-[5-ct-strict-resumption-client]
+[5-SECLEVEL 3 with ED448 key, TLSv1.2-client]
 CipherString = DEFAULT
-VerifyCAFile = ${ENV::TEST_CERTS_DIR}/embeddedSCTs1_issuer.pem
-VerifyMode = Peer
-
-[5-ct-strict-resumption-resume-client]
-CipherString = DEFAULT
-VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
+VerifyCAFile = ${ENV::TEST_CERTS_DIR}/root-ed448-cert.pem
 VerifyMode = Peer
 
 [test-5]
 ExpectedResult = Success
-HandshakeMode = Resume
-ResumptionExpected = Yes
-client = 5-ct-strict-resumption-client-extra
-resume-client = 5-ct-strict-resumption-resume-client-extra
-
-[5-ct-strict-resumption-client-extra]
-CTValidation = Strict
-
-[5-ct-strict-resumption-resume-client-extra]
-CTValidation = Strict
 
 
diff --git a/test/ssl-tests/12-ct.cnf.in b/test/ssl-tests/12-ct.cnf.in
index bf34e4b5e7..945f4599d1 100644
--- a/test/ssl-tests/12-ct.cnf.in
+++ b/test/ssl-tests/12-ct.cnf.in
@@ -1,5 +1,5 @@
 # -*- mode: perl; -*-
-# Copyright 2016-2020 The OpenSSL Project Authors. All Rights Reserved.
+# Copyright 2016-2021 The OpenSSL Project Authors. All Rights Reserved.
 #
 # Licensed under the Apache License 2.0 (the "License").  You may not use
 # this file except in compliance with the License.  You can obtain a copy
@@ -7,113 +7,79 @@
 # https://www.openssl.org/source/license.html
 
 
-## Test version negotiation
-
-use strict;
-use warnings;
+## SSL test configurations
 
 package ssltests;
+use OpenSSL::Test::Utils;
 
+our $fips_mode;
 
 our @tests = (
     {
-        name => "ct-permissive-without-scts",
-        server => { },
-        client => {
-            extra => {
-                "CTValidation" => "Permissive",
-            },
-        },
-        test => {
-            "ExpectedResult" => "Success",
-        },
+        name => "SECLEVEL 3 with default key",
+        server => { "CipherString" => "DEFAULT:\@SECLEVEL=3" },
+        client => { },
+        test   => { "ExpectedResult" => "ServerFail" },
     },
+);
+
+our @tests_ec = (
     {
-        name => "ct-permissive-with-scts",
-        server => {
-            "Certificate" => test_pem("embeddedSCTs1.pem"),
-            "PrivateKey"  => test_pem("embeddedSCTs1-key.pem"),
-        },
-        client => {
-            "VerifyCAFile" => test_pem("embeddedSCTs1_issuer.pem"),
-            extra => {
-                "CTValidation" => "Permissive",
-            },
-        },
-        test => {
-            "ExpectedResult" => "Success",
-        },
+        name => "SECLEVEL 4 with ED448 key",
+        server => { "CipherString" => "DEFAULT:\@SECLEVEL=4",
+                    "Certificate" => test_pem("server-ed448-cert.pem"),
+                    "PrivateKey" => test_pem("server-ed448-key.pem") },
+        client => { "CipherString" => "DEFAULT:\@SECLEVEL=4",
+                    "VerifyCAFile" => test_pem("root-ed448-cert.pem") },
+        test   => { "ExpectedResult" => "Success" },
     },
     {
-        name => "ct-strict-without-scts",
-        server => { },
-        client => {
-            extra => {
-                "CTValidation" => "Strict",
-            },
-        },
-        test => {
-            "ExpectedResult" => "ClientFail",
-            "ExpectedClientAlert" => "HandshakeFailure",
-        },
+        # The Ed448 signature algorithm will not be enabled.
+        # Because of the config order, the certificate is first loaded, and
+        # then the security level is chaged. If you try this with s_server
+        # the order will be reversed and it will instead fail to load the key.
+        name => "SECLEVEL 5 server with ED448 key",
+        server => { "CipherString" => "DEFAULT:\@SECLEVEL=5",
+                    "Certificate" => test_pem("server-ed448-cert.pem"),
+                    "PrivateKey" => test_pem("server-ed448-key.pem") },
+        client => { "CipherString" => "DEFAULT:\@SECLEVEL=4",
+                    "VerifyCAFile" => test_pem("root-ed448-cert.pem") },
+        test   => { "ExpectedResult" => "ServerFail" },
     },
     {
-        name => "ct-strict-with-scts",
-        server => {
-            "Certificate" => test_pem("embeddedSCTs1.pem"),
-            "PrivateKey"  => test_pem("embeddedSCTs1-key.pem"),
-        },
-        client => {
-            "VerifyCAFile" => test_pem("embeddedSCTs1_issuer.pem"),
-            extra => {
-                "CTValidation" => "Strict",
-            },
-        },
-        test => {
-            "ExpectedResult" => "Success",
-        },
+        # The client will not sent the Ed448 signature algorithm, so the server
+        # doesn't have a useable signature algorithm for the certificate.
+        name => "SECLEVEL 5 client with ED448 key",
+        server => { "CipherString" => "DEFAULT:\@SECLEVEL=4",
+                    "Certificate" => test_pem("server-ed448-cert.pem"),
+                    "PrivateKey" => test_pem("server-ed448-key.pem") },
+        client => { "CipherString" => "DEFAULT:\@SECLEVEL=5",
+                    "VerifyCAFile" => test_pem("root-ed448-cert.pem") },
+        test   => { "ExpectedResult" => "ServerFail" },
     },
     {
-        name => "ct-permissive-resumption",
-        server => {
-            "Certificate" => test_pem("embeddedSCTs1.pem"),
-            "PrivateKey"  => test_pem("embeddedSCTs1-key.pem"),
-        },
-        client => {
-            "VerifyCAFile" => test_pem("embeddedSCTs1_issuer.pem"),
-            extra => {
-                "CTValidation" => "Permissive",
-            },
-        },
-        test => {
-            "HandshakeMode" => "Resume",
-            "ResumptionExpected" => "Yes",
-            "ExpectedResult" => "Success",
-        },
+        name => "SECLEVEL 3 with P-384 key, X25519 ECDHE",
+        server => { "CipherString" => "DEFAULT:\@SECLEVEL=3",
+                    "Certificate" => test_pem("p384-server-cert.pem"),
+                    "PrivateKey" => test_pem("p384-server-key.pem"),
+                    "Groups" => "X25519" },
+        client => { "CipherString" => "ECDHE:\@SECLEVEL=3",
+                    "VerifyCAFile" => test_pem("p384-root.pem") },
+        test   => { "ExpectedResult" => "Success" },
     },
+);
+
+our @tests_tls1_2 = (
     {
-        name => "ct-strict-resumption",
-        server => {
-            "Certificate" => test_pem("embeddedSCTs1.pem"),
-            "PrivateKey"  => test_pem("embeddedSCTs1-key.pem"),
-        },
-        client => {
-            "VerifyCAFile" => test_pem("embeddedSCTs1_issuer.pem"),
-            extra => {
-                "CTValidation" => "Strict",
-            },
-        },
-        # SCTs are not present during resumption, so the resumption
-        # should succeed.
-        resume_client => {
-            extra => {
-                "CTValidation" => "Strict",
-            },
-        },
-        test => {
-            "HandshakeMode" => "Resume",
-            "ResumptionExpected" => "Yes",
-            "ExpectedResult" => "Success",
-        },
+        name => "SECLEVEL 3 with ED448 key, TLSv1.2",
+        server => { "CipherString" => "DEFAULT:\@SECLEVEL=3",
+                    "Certificate" => test_pem("server-ed448-cert.pem"),
+                    "PrivateKey" => test_pem("server-ed448-key.pem"),
+                    "MaxProtocol" => "TLSv1.2" },
+        client => { "VerifyCAFile" => test_pem("root-ed448-cert.pem") },
+        test   => { "ExpectedResult" => "Success" },
     },
 );
+
+push @tests, @tests_ec unless disabled("ec");
+push @tests, @tests_tls1_2 unless disabled("tls1_2") || disabled("ec");
-- 
2.25.1

