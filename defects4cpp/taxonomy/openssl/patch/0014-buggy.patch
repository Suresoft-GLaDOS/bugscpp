From bb4e77cb2ecd1019e7ac397bd4de24502d1dcb4f Mon Sep 17 00:00:00 2001
From: Hansol Choe <hansol614@gmail.com>
Date: Thu, 10 Mar 2022 08:09:45 +0000
Subject: [PATCH] buggy

---
 crypto/evp/p_lib.c   |  2 +-
 test/testutil/main.c | 16 ++++++++++++++++
 2 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/crypto/evp/p_lib.c b/crypto/evp/p_lib.c
index 5e032b4053..e336d91286 100644
--- a/crypto/evp/p_lib.c
+++ b/crypto/evp/p_lib.c
@@ -709,7 +709,7 @@ int EVP_PKEY_assign(EVP_PKEY *pkey, int type, void *key)
     int alias = type;
 
 #ifndef OPENSSL_NO_EC
-    if ((key != NULL) && (EVP_PKEY_type(type) == EVP_PKEY_EC)) {
+    if (EVP_PKEY_type(type) == EVP_PKEY_EC) {
         const EC_GROUP *group = EC_KEY_get0_group(key);
 
         if (group != NULL && EC_GROUP_get_curve_name(group) == NID_sm2)
diff --git a/test/testutil/main.c b/test/testutil/main.c
index 6716750a30..883799383f 100644
--- a/test/testutil/main.c
+++ b/test/testutil/main.c
@@ -7,13 +7,29 @@
  * https://www.openssl.org/source/license.html
  */

+#include <signal.h>
 #include "../testutil.h"
 #include "output.h"
 #include "tu_local.h"

+static struct sigaction dpp_gcov_sigaction;
+static struct sigaction dpp_orig_sigaction;
+void dpp_sighandler(int signum) {
+#ifdef DPP_ENABLE_GCOV
+  __gcov_flush();
+#endif
+  sigaction(SIGSEGV, &dpp_orig_sigaction, NULL);
+  raise(SIGSEGV);
+}

 int main(int argc, char *argv[])
 {
+   {
+      dpp_gcov_sigaction.sa_handler = dpp_sighandler;
+      sigemptyset(&dpp_gcov_sigaction.sa_mask);
+      dpp_gcov_sigaction.sa_flags = 0;
+      sigaction(SIGSEGV, &dpp_gcov_sigaction, &dpp_orig_sigaction);
+   }
     int ret = EXIT_FAILURE;

     test_open_streams();
--
2.25.1

