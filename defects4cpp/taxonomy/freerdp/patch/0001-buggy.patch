From 98881222c2a2b51e515144447483a69f035b5181 Mon Sep 17 00:00:00 2001
From: Hansol Choe <hschoe@suresofttech.com>
Date: Tue, 12 Jul 2022 06:32:16 +0000
Subject: [PATCH] buggy

---
 libfreerdp/codec/planar.c | 16 +++++++---------
 1 file changed, 7 insertions(+), 9 deletions(-)

diff --git a/libfreerdp/codec/planar.c b/libfreerdp/codec/planar.c
index b4b1a4cd2..fefce01c4 100644
--- a/libfreerdp/codec/planar.c
+++ b/libfreerdp/codec/planar.c
@@ -42,9 +42,10 @@ static INLINE BYTE* freerdp_bitmap_planar_delta_encode_plane(const BYTE* inPlane
 static INLINE INT32 planar_skip_plane_rle(const BYTE* pSrcData, UINT32 SrcSize, UINT32 nWidth,
                                           UINT32 nHeight)
 {
-	UINT32 used = 0;
 	UINT32 x, y;
 	BYTE controlByte;
+	const BYTE* pRLE = pSrcData;
+	const BYTE* pEnd = &pSrcData[SrcSize];

 	for (y = 0; y < nHeight; y++)
 	{
@@ -53,10 +54,10 @@ static INLINE INT32 planar_skip_plane_rle(const BYTE* pSrcData, UINT32 SrcSize,
 			int cRawBytes;
 			int nRunLength;

-			if (used >= SrcSize)
+			if (pRLE >= pEnd)
 				return -1;

-			controlByte = pSrcData[used++];
+			controlByte = *pRLE++;
 			nRunLength = PLANAR_CONTROL_BYTE_RUN_LENGTH(controlByte);
 			cRawBytes = PLANAR_CONTROL_BYTE_RAW_BYTES(controlByte);

@@ -71,21 +72,18 @@ static INLINE INT32 planar_skip_plane_rle(const BYTE* pSrcData, UINT32 SrcSize,
 				cRawBytes = 0;
 			}

-			used += cRawBytes;
+			pRLE += cRawBytes;
 			x += cRawBytes;
 			x += nRunLength;

 			if (x > nWidth)
 				return -1;

-			if (used > SrcSize)
+			if (pRLE > pEnd)
 				return -1;
 		}
 	}
-
-	if (used > INT32_MAX)
-		return -1;
-	return (INT32)used;
+	return (INT32)(pRLE - pSrcData);
 }

 static INLINE INT32 planar_decompress_plane_rle_only(const BYTE* pSrcData, UINT32 SrcSize,
--
2.17.1

