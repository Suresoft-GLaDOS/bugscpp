{
  "info": {
    "url": "https://github.com/vstakhov/libucl",
    "short-desc": "Universal configuration library parser",
    "vcs": "git"
  },
  "common": {
    "build": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "./autogen.sh",
            "./configure",
            "make clean",
            "@DPP_COMPILATION_DB_TOOL@ make -j@DPP_PARALLEL_BUILD@"
          ]
        }
      ]
    },
    "build-coverage": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "./autogen.sh",
            "./configure CFLAGS=\"--coverage -g -O0\" LDFLAGS=\"-lgcov\"",
            "make clean",
            "@DPP_COMPILATION_DB_TOOL@ make -j@DPP_PARALLEL_BUILD@"
          ]
        }
      ]
    },
    "test-type": "automake",
    "test": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c \"[ -f AUTOMAKE_TEST_CASE.output ] || make --directory tests -p | sed -n \"s/^TESTS[^_]=[[:blank:]]*//p\" | tr ' ' '\\n' > AUTOMAKE_TEST_CASE.output\"",
            "bash -c 'index=$(cat DPP_TEST_INDEX); make check TESTS=\"$(sed -n \"${index}p\" < AUTOMAKE_TEST_CASE.output)\"'"
          ]
        }
      ]
    },
    "test-coverage": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c \"[ -f AUTOMAKE_TEST_CASE.output ] || make --directory tests -p | sed -n \"s/^TESTS[^_]=[[:blank:]]*//p\" | tr ' ' '\\n' > AUTOMAKE_TEST_CASE.output\"",
            "bash -c 'index=$(cat DPP_TEST_INDEX); make CFLAGS=\"--coverage -g -O0 -DDPP_ENABLE_GCOV\" check TESTS=\"$(sed -n \"${index}p\" < AUTOMAKE_TEST_CASE.output)\"'"
          ]
        }
      ]
    },
    "gcov": {
      "exclude": [],
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c 'cd src; find /home/workspace/src/.libs -type f -name \"*.o\" -exec gcov @DPP_ADDITIONAL_GCOV_OPTIONS@ --preserve-paths {} \\;'",
            "bash -c 'find /home/workspace/src/.libs -type f -name \"*.gcda\" -delete'",
            "bash -c 'mkdir gcov; mv src/*.gcov gcov'"
          ]
        }
      ]
    }
  },
  "defects": [
    {
      "id": 1,
      "hash": "6236bbe41210214f1b757b680781cebddf6b3d80",
      "num_cases": 6,
      "case": [4],
      "tags": [
          "etc",
          "multi-line",
          "modified"
      ],
      "description": "Add notice for emitting multi-value keys to msgpack."
    },
    {
      "id": 2,
      "hash": "2e2fd34ea696c969148c23fadd088db992c39990",
      "num_cases": 5,
      "case": [1],
      "tags": [
          "logical-error",
          "single-line",
          "added"
      ],
      "description": "Fix parsing of macro arguments with quotes."
    },
    {
      "id": 3,
      "hash": "114a8e4272f3c87c3171d09c927197fa6d554a68",
      "num_cases": 5,
      "case": [1],
      "tags": [
          "logical-error",
          "single-line",
          "added"
      ],
      "description": "Fix parsing macroses after objects."
    },
    {
      "id": 4,
      "hash": "fa583ef84e074ee752a2676f1ea1d989f37fdf5a",
      "num_cases": 5,
      "case": [1],
      "tags": [
          "omission",
          "multi-line",
          "added"
      ],
      "description": "Fix parsing spaces at the beginning of document."
    },
    {
      "id": 5,
      "hash": "114a8e4272f3c87c3171d09c927197fa6d554a68",
      "num_cases": 5,
      "case": [1],
      "tags": [
          "logcial-error",
          "single-line",
          "added"
      ],
      "description": "Fix parsing macroses after objects."
    },
    {
      "id": 6,
      "hash": "fa583ef84e074ee752a2676f1ea1d989f37fdf5a",
      "num_cases": 5,
      "case": [1],
      "tags": [
          "omission",
          "multi-line",
          "added"
      ],
      "description": "Fix parsing spaces at the beginning of document."
    }
  ]
}
