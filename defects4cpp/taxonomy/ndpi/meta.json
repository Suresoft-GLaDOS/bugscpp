{
  "info": {
    "url": "https://github.com/ntop/nDPI.git",
    "short-desc": "nDPIÂ® is an open source LGPLv3 library for deep-packet inspection.",
    "vcs": "git"
  },
  "common": {
    "build": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c './autogen.sh'",
            "bash -c './configure --prefix=\"/home/workspace/install\"'",
            "bash -c 'make -j @DPP_PARALLEL_BUILD@'",
            "bash -c 'make install'"
          ]
        }
      ]
    },
    "build-coverage": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c './autogen.sh'",
            "bash -c 'CFLAGS=\"-Wno-error --coverage -g -O0\" ./configure --prefix=\"/home/workspace/install\"'",
            "bash -c 'make -j @DPP_PARALLEL_BUILD@'",
            "bash -c 'make install'"
          ]
        }
      ]
    },
    "test-type": "ctest",
    "test": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c 'index=$(cat DPP_TEST_INDEX); example/ndpiReader -p example/protos.txt -c example/categories.txt -q -t -i tests/pcap/$(sed -n ${index}p .dpp/test_list) -w tests/result/$(sed -n ${index}p .dpp/test_list) -v 2'",
            "bash -c 'index=$(cat DPP_TEST_INDEX); example/ndpiReader -p example/protos.txt -c example/categories.txt -q -t -i tests/pcap/$(sed -n ${index}p .dpp/test_list) -w /tmp/reader.out -v 2'",
            "bash -c 'index=$(cat DPP_TEST_INDEX); diff tests/result/$(sed -n ${index}p .dpp/test_list).out /tmp/reader.out; [ $? -eq 0 ]'"
          ]
        }
      ]
    },
    "test-coverage": {
      "commands": [
        {
          "type": "docker",
          "lines": [
            "bash -c 'index=$(cat DPP_TEST_INDEX); example/ndpiReader -p example/protos.txt -c example/categories.txt -q -t -i tests/pcap/$(sed -n ${index}p .dpp/test_list) -w tests/result/$(sed -n ${index}p .dpp/test_list) -v 2'",
            "bash -c 'index=$(cat DPP_TEST_INDEX); example/ndpiReader -p example/protos.txt -c example/categories.txt -q -t -i tests/pcap/$(sed -n ${index}p .dpp/test_list) -w /tmp/reader.out -v 2'",
            "bash -c 'index=$(cat DPP_TEST_INDEX); diff tests/result/$(sed -n ${index}p .dpp/test_list).out /tmp/reader.out; [ $? -eq 0 ]'"
          ]
        }
      ]
    },
    "gcov": {
      "exclude": [],
      "commands": [
        {
          "type": "docker",
          "lines": [
            "mkdir gcov",
            "bash -c 'cd src/lib; gcov *.gcno'",
            "bash -c 'cd src/lib; gcov */*.gcno'",
            "bash -c 'find . -type f -name \"*.gcov\" -execdir mv {} /home/workspace/gcov \\;'",
            "bash -c 'find . -type f -name \"*.gcda\" -delete'"
          ]
        }
      ]
    }
  },
  "defects": [
    {
      "hash": "23594f036536468072198a57c59b6e9d63caf6ce",
      "num_cases": 134,
      "case": [110],
      "description": "CVE-2020-15474 : Out-of-bounds Write"
    },
    {
      "hash": "b6eef17e54999586b6aef8f545c87de4d3ec0ab3",
      "num_cases": 133,
      "case": [63],
      "description": "avoid producing alerts for known protocol on unknown port when using TLS"
    },
    {
      "hash": "0b3f8ed849cdf9971224c49a3958f0904a2bbbb5",
      "num_cases": 268,
      "case": [222],
      "description": "RSH vs Syslog may still happen for midstream traffic"
    }
  ]
}
